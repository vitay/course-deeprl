# Overview {.unnumbered}

This website contains the materials for the module **Deep Reinforcement Learning** taught by Dr. Julien Vitay at the Technische Universit√§t Chemnitz, Faculty of Computer Science, Professorship for Artificial Intelligence. 

Each section/lecture is accompanied by a set of videos, the slides and a written version of the content. Some sections are optional in the sense that no questions will be asked at the exam, but those interested in becoming neural network experts should feel free to study them. The (slightly outdated) videos are integrated in the lecture notes, but you can also access the complete playlist on [Youtube](https://www.youtube.com/playlist?list=PLIEjdhhAF7UJwegwyWUcDrUNJTQfxMcUw).

Exercises are provided in the form of Jupyter notebooks, allowing to implement in Python at your own pace the algorithms seen in the lectures and to learn to use reinforcement learning libraries such as `gym`. A notebook to work on (locally or on Colab) and the solution are available in the [Exercises section](exercises/Content.qmd). 


## Syllabus

### Lectures

::: {.columns}
::: {.column width=50%}

1. **Introduction**
    1. [Introduction](notes/1.1-Introduction.qmd)
    2. [Math basics](notes/1.2-Math.qmd)
2. **Tabular RL**
    1. [Bandits](notes/2.1-Bandits.qmd)
    2. [Markov Decision Processes](notes/2.2-MDP.qmd)
    3. [Dynamic Programming](notes/2.3-DP.qmd)
    4. [Monte Carlo control](notes/2.4-MC.qmd)
    5. [Temporal Difference](notes/2.5-TD.qmd)
    6. [Function approximation](notes/2.6-FA.qmd)
    7. [Deep learning](notes/2.7-NN.qmd)

:::
::: {.column width=50%}

3. **Model-free RL**
    1. [Deep Q-network](notes/3.1-DQN.qmd)
    2. [Beyond DQN](notes/3.2-BeyondDQN.qmd)
    3. [Policy Gradient](notes/3.3-PG.qmd)
    4. [A2C / A3C](notes/3.4-A3C.qmd)
    5. [DDPG](notes/3.5-DDPG.qmd)
    6. [TRPO / PPO](notes/3.6-PPO.qmd)
    7. [SAC](notes/3.7-SAC.qmd)

4. **Model-based RL**
    1. [Model-based RL](notes/4.1-MB.qmd)
    2. [Learned models](notes/4.2-LearnedModels.qmd)
    3. [AlphaGo](notes/4.3-AlphaGo.qmd)
    4. [Successor representations](notes/4.4-SR.qmd)

5. **Outlook**
    1. [Outlook](notes/5.1-Outlook.qmd)

:::
:::

### Exercises

Notebooks and videos are in the [List of Exercises](exercises/Content.qmd). Below are links to the rendered solutions.

::: {.columns}
::: {.column width=50%}

1. [Introduction to Python](exercises/1-Python-solution.ipynb)
2. [Numpy and Matplotlib](exercises/2-Numpy-solution.ipynb)

:::
::: {.column width=50%}

:::
:::

## Recommended readings

* [@Sutton2017]  Richard Sutton and Andrew Barto (2017). Reinforcement Learning: An Introduction. MIT press. 
<http://incompleteideas.net/book/the-book-2nd.html>
